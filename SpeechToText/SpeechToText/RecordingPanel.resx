<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_startStopToggle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMNSURBVFhH7ZhLbE1RFIb/NkgkVSORIOKVeA2Ix8SjHo2BSCQ6M/COmglDIqx7b0l1gGKgI8aI
        iCgTjJSgElNDj4HQqkcNNPX4177rJPeeu9P2PJH4ky/3rHX2/ve65+y97zkXiSVYT7rIS9Jn6PElFLHO
        Wv0BCRaQR+TXKDxECfOtV04SNJFPFUWMxgBZY70zlmAe6beBo9DHKznXXDKU4EFo4CjcNZeMJFgWGjAO
        S80tAwnaQoPFoWhuGUhwKzRYHG6aWwYSXCG9Hj6QcCGa87W9bG45SjCDVBfYhul2NkcJ2slVD74NW3O+
        tu3mloHKtyhcSFR6zS1HFbHSU8gKO5uhBDMdgQQtpNVDJwkXqDlf2xZzq/WPLMF1R6C0b3HYP7J0z6rc
        t3RlCubUUMAufoYL2Ulq21au7rB/ZIUNSljI+ba8BsFuUl2gFu1rqx6BUi8w/VucuECdI90WafyM+AaN
        wlNzU7875JpFMSS4SJ5bpHE38Q0ahdvmpn4vyHmLYkhwjLyzSGPfdhKVs+ZWx+N+ztUjFseQYKMzLWKJ
        iwtotkHiU8AG5xVs7olerLowniYfaXrCMvqtk8zDHueh0ufC8hvgOBfHVnkevieNLi5iLY+HiK+AkRhi
        39XOox2TGWtxnS5OJME08o2csoze6n2Mh4mvEB/D7LPHeqtnB/mKk5hqmYQSHLdBtlhGi9zE3FviK6iS
        N2zbbL3Uayv5QY5aJgUJ6oluqp9Jk2WBM5jIwQ8z59vAda4ecm0C6YIQfCE3SL1lU5Kggdwn31nUfmbK
        kz3QaUziuVkOPa5WHfsccH0F90iD5VOWrjjdWMtXqMctmJGlq17/hXhMfpJzJOGqHYv0bwzBE6KFviJa
        9EEWvNehx4ILdk7baIGrrHdu0qujheqKfE2CuRegxXXY1lI9HXJX+Uk5XGCrnf0L9L/ApPoHCmwk4feP
        8m93rhJM4KpcTGrfNcaCYBHJaB8sYAfNB0n4VkZlgF7bzDUllTCbxvoz5RswDoN8Nppi7imogO2eQZJR
        wGZzH0HAb5Z5MX5FuN+LAAAAAElFTkSuQmCC
</value>
  </data>
</root>